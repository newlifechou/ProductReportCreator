//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfReportCreator.ServiceReferenceVHP {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VHP", Namespace="http://www.newlifechou.com")]
    [System.SerializableAttribute()]
    public partial class VHP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMIWorkingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VHPDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VHPDeviceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimension {
            get {
                return this.DimensionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionField, value) != true)) {
                    this.DimensionField = value;
                    this.RaisePropertyChanged("Dimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMIWorkingNumber {
            get {
                return this.PMIWorkingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PMIWorkingNumberField, value) != true)) {
                    this.PMIWorkingNumberField = value;
                    this.RaisePropertyChanged("PMIWorkingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PO {
            get {
                return this.POField;
            }
            set {
                if ((object.ReferenceEquals(this.POField, value) != true)) {
                    this.POField = value;
                    this.RaisePropertyChanged("PO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VHPDate {
            get {
                return this.VHPDateField;
            }
            set {
                if ((this.VHPDateField.Equals(value) != true)) {
                    this.VHPDateField = value;
                    this.RaisePropertyChanged("VHPDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VHPDevice {
            get {
                return this.VHPDeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.VHPDeviceField, value) != true)) {
                    this.VHPDeviceField = value;
                    this.RaisePropertyChanged("VHPDevice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceVHP.IVHPService")]
    public interface IVHPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPService/GetVHPs", ReplyAction="http://tempuri.org/IVHPService/GetVHPsResponse")]
        WpfReportCreator.ServiceReferenceVHP.VHP[] GetVHPs(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPService/GetVHPs", ReplyAction="http://tempuri.org/IVHPService/GetVHPsResponse")]
        System.Threading.Tasks.Task<WpfReportCreator.ServiceReferenceVHP.VHP[]> GetVHPsAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPService/GetVHPCount", ReplyAction="http://tempuri.org/IVHPService/GetVHPCountResponse")]
        int GetVHPCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVHPService/GetVHPCount", ReplyAction="http://tempuri.org/IVHPService/GetVHPCountResponse")]
        System.Threading.Tasks.Task<int> GetVHPCountAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVHPServiceChannel : WpfReportCreator.ServiceReferenceVHP.IVHPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VHPServiceClient : System.ServiceModel.ClientBase<WpfReportCreator.ServiceReferenceVHP.IVHPService>, WpfReportCreator.ServiceReferenceVHP.IVHPService {
        
        public VHPServiceClient() {
        }
        
        public VHPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VHPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VHPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfReportCreator.ServiceReferenceVHP.VHP[] GetVHPs(int skip, int take) {
            return base.Channel.GetVHPs(skip, take);
        }
        
        public System.Threading.Tasks.Task<WpfReportCreator.ServiceReferenceVHP.VHP[]> GetVHPsAsync(int skip, int take) {
            return base.Channel.GetVHPsAsync(skip, take);
        }
        
        public int GetVHPCount() {
            return base.Channel.GetVHPCount();
        }
        
        public System.Threading.Tasks.Task<int> GetVHPCountAsync() {
            return base.Channel.GetVHPCountAsync();
        }
    }
}
